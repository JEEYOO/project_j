import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import datetime
import os
import warnings

warnings.filterwarnings('ignore')
utils.set_plot_error('rmsle')

%matplotlib inline

# Data 경로 설정
DATA_DIR = 'data'

# train 데이터셋 로드 (train.csv)
train = pd.read_csv(os.path.join(DATA_DIR, project_name, 'train.csv'))
                                 
# test 데이터셋 로드 (test.csv)
test = pd.read_csv(os.path.join(DATA_DIR, project_name, 'test.csv'))




##################################


train.groupby('season')['casual'].mean() #season 에 따라서 비회원이 얼마나 타는가 -> 2여름, 3가을 이 많음 1봄이제일적음

train.temp.describe()

train['datetime'] = pd.to_datetime(train['datetime']) #시간 변수로 바꿔서
train.info()

train.groupby('month')['temp'].mean().plot(kind='bar')


x_data = train.drop(['casual', 'registered', 'count'], axis=1) #train에만 있는 축
y_data = train['count'].to_frame()

scaled_x = StandardScaler().fit_transform(x_data)
df_scaled_x = pd.DataFrame(scaled_x, columns=x_data.columns.values)

scaled_test = StandardScaler().fit_transform(test)
df_scaled_test = pd.DataFrame(scaled_test, columns=test.columns.values)

x_train, x_test, y_train, y_test = model_selection.train_test_split(df_scaled_x, y_data, test_size=0.3)


model = RandomForestRegressor(random_state=0)

model.fit(x_train, y_train)
prediction_x = model.predict(x_test)
